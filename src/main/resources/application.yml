# --- Default (común a todos los perfiles) ---
spring:
  application:
    name: Clientes24
  jackson:
    time-zone: UTC
  servlet:
    multipart:
      max-file-size: 25MB
      max-request-size: 25MB

server:
  port: 8080

# Log un poco más verboso para depurar (ajusta a 'info' si prefieres)
logging:
  level:
    root: info
    org.springframework.web: info
    org.hibernate.SQL: warn

# --- Perfil LOCAL (por defecto) ---
---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://localhost:5432/akumaya
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
  sql:
    init:
      mode: always

  elasticsearch:
    uris: http://localhost:9200
    username:
    password:

# CORS básico para desarrollo (si usas React en http://localhost:5173 o 3000)
app:
  cors:
    allowed-origins: "http://localhost:3000,http://localhost:5173"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"

# --- Perfil AWS (producción) ---
---
spring:
  config:
    activate:
      on-profile: aws
  datasource:
    url: ${DB_URL}        # ej: jdbc:postgresql://<host>:5432/akumaya
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: none      # En producción, mantenlo en none
    properties:
      hibernate:
        jdbc:
          time_zone: UTC

  elasticsearch:
    uris: ${ES_URIS}      # ej: https://search-mi-dominio-xyz.es.amazonaws.com
    username: ${ES_USER}  # si usas basic auth (EC2/Elasticsearch propio)
    password: ${ES_PASS}  # con OpenSearch gestionado suele usarse IAM en vez de basic

server:
  port: ${PORT:8080}

logging:
  level:
    root: info

